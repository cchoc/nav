{"favicon":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755829655821.png","language":"zh-CN","loading":"random","runtime":1754980465303,"userActions":[],"email":"","showGithub":false,"showLanguage":true,"showRate":true,"openSearch":true,"title":"拾梦杂货铺","description":"","keywords":"资源共享","theme":"Side","actionUrl":"","appTheme":"Current","openSEO":true,"createWebKey":"E","headerContent":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>多曲目音乐播放器</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        .music-player {\n            position: fixed;\n            right: 1rem;\n            /* 向下移动1.3cm (之前的1cm + 新增的0.3cm) */\n            top: calc(100vh / 3 - 40px + 49.14px);\n            width: 320px;\n            height: 80px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            padding: 0 14px;\n            display: flex;\n            align-items: center;\n            z-index: 9999;\n            transition: box-shadow 0.3s ease;\n        }\n\n        .music-player:hover {\n            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n        }\n\n        .player-controls {\n            display: flex;\n            gap: 10px;\n            align-items: center;\n            margin-right: 8px;\n        }\n\n        .control-btn {\n            width: 38px;\n            height: 38px;\n            border: none;\n            border-radius: 50%;\n            background-color: #f5f5f5;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: background-color 0.3s ease;\n        }\n\n        .control-btn:hover {\n            background-color: #e8e8e8;\n        }\n\n        .play-btn {\n            background-color: #2c3e50;\n            color: white;\n        }\n\n        .play-btn:hover {\n            background-color: #34495e;\n        }\n\n        .music-info {\n            flex: 1;\n            min-width: 0;\n            margin: 0 8px;\n        }\n\n        /* 标题滚动容器 */\n        .title-container {\n            overflow: hidden;\n            position: relative;\n            height: 18px; /* 与文字高度匹配 */\n        }\n\n        .music-title {\n            font-size: 14px;\n            color: #333333;\n            margin-bottom: 4px;\n            white-space: nowrap;\n            position: absolute;\n            will-change: transform;\n        }\n\n        /* 连续滚动动画 */\n        .scroll {\n            animation: scrollTitle 15s linear infinite;\n        }\n\n        @keyframes scrollTitle {\n            0% {\n                transform: translateX(0);\n            }\n            100% {\n                transform: translateX(-100%);\n            }\n        }\n\n        .progress-container {\n            width: 100%;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            cursor: pointer;\n        }\n\n        .progress-bar {\n            width: 0%;\n            height: 100%;\n            background-color: #2c3e50;\n            border-radius: 2px;\n            transition: width 0.1s linear;\n        }\n\n        /* 音量控制 - 滑块显示在图标正上方 */\n        .volume-wrapper {\n            position: relative;\n            margin-left: 5px;\n        }\n\n        .volume-btn {\n            border: none;\n            background: transparent;\n            cursor: pointer;\n            color: #666666;\n            width: 28px;\n            height: 28px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 10;\n            position: relative;\n        }\n\n        .volume-slider-container {\n            position: absolute;\n            left: 50%;\n            top: -70px;\n            background-color: white;\n            padding: 8px;\n            border-radius: 6px;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n            transform: translateX(-50%) rotate(-90deg);\n            transform-origin: center bottom;\n            display: none;\n            z-index: 100;\n        }\n\n        .volume-slider-container.show {\n            display: block;\n        }\n\n        .volume-slider {\n            width: 80px;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            outline: none;\n            -webkit-appearance: none;\n        }\n\n        .volume-slider::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n        }\n\n        .volume-slider::-moz-range-thumb {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n            border: none;\n        }\n\n        @media (max-width: 768px) {\n            .music-player {\n                width: 290px;\n                height: 70px;\n                padding: 0 10px;\n            }\n\n            .control-btn {\n                width: 34px;\n                height: 34px;\n            }\n\n            .music-title {\n                font-size: 13px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"music-player\">\n        <div class=\"player-controls\">\n            <button class=\"control-btn prev-btn\" id=\"prevBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M19 20L9 12L19 4V20Z\"></path>\n                    <path d=\"M5 19V5\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn play-btn\" id=\"playBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M8 5V19L19 12L8 5Z\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn next-btn\" id=\"nextBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M5 4L15 12L5 20V4Z\"></path>\n                    <path d=\"M19 5V19\"></path>\n                </svg>\n            </button>\n        </div>\n\n        <div class=\"music-info\">\n            <div class=\"title-container\" id=\"titleContainer\">\n                <div class=\"music-title\" id=\"musicTitle\"></div>\n            </div>\n            <div class=\"progress-container\" id=\"progressContainer\">\n                <div class=\"progress-bar\" id=\"progressBar\"></div>\n            </div>\n        </div>\n\n        <div class=\"volume-wrapper\">\n            <button class=\"volume-btn\" id=\"volumeBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path>\n                    <path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path>\n                    <path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>\n                </svg>\n            </button>\n            <div class=\"volume-slider-container\" id=\"volumeSliderContainer\">\n                <input type=\"range\" class=\"volume-slider\" id=\"volumeSlider\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0.7\">\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 音乐播放列表 - 已添加3个新位置供替换\n        const playlist = [\n            {\n                title: \"风往北吹 - 孙楠\",\n                url: \"https://lz.qaiu.top/parser?url=https://music.163.com/song?id=145695&uct2=U2FsdGVkX1/ZW9tG/fe9JVHRIaFsaVyrpCy6zgJCwy0=\"\n            },\n            {\n                title: \"How You Make Me Feel - Various Artists\",\n                url: \"https://lz.qaiu.top/parser?url=https://music.163.com/song?id=32619054&uct2=U2FsdGVkX19wRai9cJ7d7nfruysLAMBdW65+MQnN5xU=\"\n            },\n            {\n                title: \"Sleepyhead - Galen Crew\",\n                url: \"https://lz.qaiu.top/parser?url=https://music.163.com/song?id=444267630&uct2=U2FsdGVkX1+l69LRacH8kr7olGFnbAawt/nQSNtxACM=\"\n            },\n            {\n                title: \"从头再来 - 刘欢\",\n                url: \"http://music.163.com/song/media/outer/url?id=5269083.mp3\"\n            },\n         \n        // 当前播放索引\n        let currentSongIndex = 0;\n        // 音频对象\n        let audio = new Audio();\n        // 其他状态变量\n        let isMuted = false;\n        let volumeSliderVisible = false;\n\n        // 获取DOM元素\n        const playBtn = document.getElementById('playBtn');\n        const prevBtn = document.getElementById('prevBtn');\n        const nextBtn = document.getElementById('nextBtn');\n        const progressContainer = document.getElementById('progressContainer');\n        const progressBar = document.getElementById('progressBar');\n        const volumeBtn = document.getElementById('volumeBtn');\n        const volumeSlider = document.getElementById('volumeSlider');\n        const volumeSliderContainer = document.getElementById('volumeSliderContainer');\n        const musicTitle = document.getElementById('musicTitle');\n        const titleContainer = document.getElementById('titleContainer');\n\n        // 初始化播放器\n        function initPlayer() {\n            loadSong(currentSongIndex);\n            \n            // 设置初始音量\n            audio.volume = volumeSlider.value;\n            \n            // 添加事件监听\n            audio.addEventListener('timeupdate', updateProgress);\n            audio.addEventListener('ended', playNextSong);\n        }\n\n        // 加载指定索引的歌曲\n        function loadSong(index) {\n            if (index < 0 || index >= playlist.length) return;\n            \n            const song = playlist[index];\n            audio.src = song.url;\n            \n            // 更新标题\n            musicTitle.textContent = song.title;\n            // 检查是否需要滚动\n            checkTitleLength();\n        }\n\n        // 播放当前歌曲\n        function playCurrentSong() {\n            audio.play().catch(err => {\n                alert('播放失败，请检查链接有效性或网络状态');\n                console.error('播放错误:', err);\n            });\n            updatePlayBtnIcon();\n        }\n\n        // 暂停当前歌曲\n        function pauseCurrentSong() {\n            audio.pause();\n            updatePlayBtnIcon();\n        }\n\n        // 播放上一首\n        function playPrevSong() {\n            currentSongIndex = (currentSongIndex - 1 + playlist.length) % playlist.length;\n            loadSong(currentSongIndex);\n            playCurrentSong();\n        }\n\n        // 播放下一首\n        function playNextSong() {\n            currentSongIndex = (currentSongIndex + 1) % playlist.length;\n            loadSong(currentSongIndex);\n            playCurrentSong();\n        }\n\n        // 更新播放按钮图标\n        function updatePlayBtnIcon() {\n            const svg = playBtn.querySelector('svg');\n            if (audio.paused) {\n                svg.innerHTML = '<path d=\"M8 5V19L19 12L8 5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M6 4H10V20H6V4Z\"></path><path d=\"M14 4H18V20H14V4Z\"></path>';\n            }\n        }\n\n        // 更新进度条\n        function updateProgress() {\n            if (isNaN(audio.duration)) return;\n            const progress = (audio.currentTime / audio.duration) * 100;\n            progressBar.style.width = `${progress}%`;\n        }\n\n        // 检查标题是否过长，需要滚动\n        function checkTitleLength() {\n            // 移除之前的滚动类\n            musicTitle.classList.remove('scroll');\n            \n            // 如果标题长度超过容器宽度，则启用滚动\n            if (musicTitle.offsetWidth > titleContainer.offsetWidth) {\n                // 创建重复标题用于无缝滚动\n                musicTitle.textContent = musicTitle.textContent + \"  |  \" + musicTitle.textContent;\n                musicTitle.classList.add('scroll');\n            }\n        }\n\n        // 事件监听\n        playBtn.addEventListener('click', () => {\n            if (audio.paused) {\n                playCurrentSong();\n            } else {\n                pauseCurrentSong();\n            }\n        });\n\n        prevBtn.addEventListener('click', playPrevSong);\n        nextBtn.addEventListener('click', playNextSong);\n\n        // 进度条控制\n        progressContainer.addEventListener('click', (e) => {\n            if (isNaN(audio.duration)) return;\n            const clickPos = e.offsetX / progressContainer.clientWidth;\n            audio.currentTime = clickPos * audio.duration;\n        });\n\n        // 音量控制交互\n        volumeBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            volumeSliderVisible = !volumeSliderVisible;\n            volumeSliderContainer.classList.toggle('show', volumeSliderVisible);\n        });\n\n        // 点击页面其他地方隐藏音量滑块\n        document.addEventListener('click', () => {\n            if (volumeSliderVisible) {\n                volumeSliderVisible = false;\n                volumeSliderContainer.classList.remove('show');\n            }\n        });\n\n        // 音量滑块调整\n        volumeSlider.addEventListener('input', () => {\n            audio.volume = volumeSlider.value;\n            if (isMuted) {\n                isMuted = false;\n                updateVolumeIcon();\n            }\n        });\n\n        // 静音切换（双击音量图标）\n        volumeBtn.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            isMuted = !isMuted;\n            audio.muted = isMuted;\n            updateVolumeIcon();\n        });\n\n        // 更新音量图标\n        function updateVolumeIcon() {\n            const svg = volumeBtn.querySelector('svg');\n            if (isMuted || audio.volume === 0) {\n                svg.innerHTML = '<path d=\"M16.5 12C16.5 10.2386 15.5614 8.63604 14 7.93701L16.5 3H7L10.5 7.93701C9.00585 8.69107 8.0043 10.3016 8.0043 12C8.0043 13.6984 9.00585 15.3089 10.5 16.063L7 21H16.5L13 16.063C14.5614 15.364 15.5 13.7614 15.5 12H16.5ZM19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            } else if (audio.volume < 0.5) {\n                svg.innerHTML = '<path d=\"M18.5 10.5L17.5 11.5L14 8V16L17.5 12.5L18.5 13.5L22 10L18.5 6.5L17.5 7.5L18.5 8.5V10.5ZM11 5L6 9H2V15H6L11 19V5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path><path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path><path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            }\n        }\n\n        // 窗口大小变化时重新检查标题长度\n        window.addEventListener('resize', checkTitleLength);\n\n        // 初始化播放器\n        initPlayer();\n    </script>\n</body>\n</html>\n","footerContent":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>音乐播放器</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        .music-player {\n            position: fixed;\n            right: 1rem;\n            /* 向下移动1cm (1cm = 37.8px) */\n            top: calc(100vh / 3 - 40px + 37.8px);\n            width: 300px;\n            height: 80px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            padding: 0 14px;\n            display: flex;\n            align-items: center;\n            z-index: 9999;\n            transition: box-shadow 0.3s ease;\n        }\n\n        .music-player:hover {\n            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n        }\n\n        .player-controls {\n            display: flex;\n            gap: 10px;\n            align-items: center;\n            margin-right: 8px;\n        }\n\n        .control-btn {\n            width: 38px;\n            height: 38px;\n            border: none;\n            border-radius: 50%;\n            background-color: #f5f5f5;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: background-color 0.3s ease;\n        }\n\n        .control-btn:hover {\n            background-color: #e8e8e8;\n        }\n\n        .play-btn {\n            background-color: #2c3e50;\n            color: white;\n        }\n\n        .play-btn:hover {\n            background-color: #34495e;\n        }\n\n        .music-info {\n            flex: 1;\n            min-width: 0;\n            margin: 0 8px;\n        }\n\n        /* 标题滚动容器 */\n        .title-container {\n            overflow: hidden;\n            position: relative;\n            height: 18px; /* 与文字高度匹配 */\n        }\n\n        .music-title {\n            font-size: 14px;\n            color: #333333;\n            margin-bottom: 4px;\n            white-space: nowrap;\n            position: absolute;\n            will-change: transform;\n        }\n\n        /* 连续滚动动画 */\n        .scroll {\n            animation: scrollTitle 15s linear infinite;\n        }\n\n        @keyframes scrollTitle {\n            0% {\n                transform: translateX(0);\n            }\n            100% {\n                transform: translateX(-100%);\n            }\n        }\n\n        .progress-container {\n            width: 100%;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            cursor: pointer;\n        }\n\n        .progress-bar {\n            width: 0%;\n            height: 100%;\n            background-color: #2c3e50;\n            border-radius: 2px;\n            transition: width 0.1s linear;\n        }\n\n        /* 音量控制 - 滑块显示在图标正上方 */\n        .volume-wrapper {\n            position: relative;\n            margin-left: 5px;\n        }\n\n        .volume-btn {\n            border: none;\n            background: transparent;\n            cursor: pointer;\n            color: #666666;\n            width: 28px;\n            height: 28px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 10;\n            position: relative;\n        }\n\n        .volume-slider-container {\n            position: absolute;\n            left: 50%;\n            top: -70px;\n            background-color: white;\n            padding: 8px;\n            border-radius: 6px;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n            transform: translateX(-50%) rotate(-90deg);\n            transform-origin: center bottom;\n            display: none;\n            z-index: 100;\n        }\n\n        .volume-slider-container.show {\n            display: block;\n        }\n\n        .volume-slider {\n            width: 80px;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            outline: none;\n            -webkit-appearance: none;\n        }\n\n        .volume-slider::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n        }\n\n        .volume-slider::-moz-range-thumb {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n            border: none;\n        }\n\n        @media (max-width: 768px) {\n            .music-player {\n                width: 270px;\n                height: 70px;\n                padding: 0 10px;\n            }\n\n            .control-btn {\n                width: 34px;\n                height: 34px;\n            }\n\n            .music-title {\n                font-size: 13px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"music-player\">\n        <div class=\"player-controls\">\n            <button class=\"control-btn prev-btn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M19 20L9 12L19 4V20Z\"></path>\n                    <path d=\"M5 19V5\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn play-btn\" id=\"playBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M8 5V19L19 12L8 5Z\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn next-btn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M5 4L15 12L5 20V4Z\"></path>\n                    <path d=\"M19 5V19\"></path>\n                </svg>\n            </button>\n        </div>\n\n        <div class=\"music-info\">\n            <div class=\"title-container\">\n                <!-- 使用重复标题实现无缝滚动效果 -->\n                <div class=\"music-title\" id=\"musicTitle\">晴天 - 周杰伦  |  晴天 - 周杰伦</div>\n            </div>\n            <div class=\"progress-container\" id=\"progressContainer\">\n                <div class=\"progress-bar\" id=\"progressBar\"></div>\n            </div>\n        </div>\n\n        <div class=\"volume-wrapper\">\n            <button class=\"volume-btn\" id=\"volumeBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path>\n                    <path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path>\n                    <path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>\n                </svg>\n            </button>\n            <div class=\"volume-slider-container\" id=\"volumeSliderContainer\">\n                <input type=\"range\" class=\"volume-slider\" id=\"volumeSlider\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0.7\">\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 音乐链接\n        const musicUrl = \"https://lz.qaiu.top/parser?url=https://music.163.com/song?id=145695&uct2=U2FsdGVkX1/ZW9tG/fe9JVHRIaFsaVyrpCy6zgJCwy0=\";\n        // 原始音乐标题\n        const originalMusicName = \"风往北吹 - 孙楠\";\n        // 重复标题用于无缝滚动（添加分隔符）\n        const musicName = originalMusicName + \"  |  \" + originalMusicName;\n\n        // 获取DOM元素\n        const playBtn = document.getElementById('playBtn');\n        const prevBtn = document.querySelector('.prev-btn');\n        const nextBtn = document.querySelector('.next-btn');\n        const progressContainer = document.getElementById('progressContainer');\n        const progressBar = document.getElementById('progressBar');\n        const volumeBtn = document.getElementById('volumeBtn');\n        const volumeSlider = document.getElementById('volumeSlider');\n        const volumeSliderContainer = document.getElementById('volumeSliderContainer');\n        const musicTitle = document.getElementById('musicTitle');\n        const titleContainer = document.querySelector('.title-container');\n\n        // 初始化音频对象\n        let audio = new Audio(musicUrl);\n        let isMuted = false;\n        let volumeSliderVisible = false;\n\n        // 设置音乐标题\n        musicTitle.textContent = musicName;\n\n        // 检查标题是否过长，需要滚动\n        function checkTitleLength() {\n            // 只比较原始标题长度和容器宽度\n            const tempSpan = document.createElement('span');\n            tempSpan.style.visibility = 'hidden';\n            tempSpan.style.whiteSpace = 'nowrap';\n            tempSpan.style.fontSize = '14px';\n            tempSpan.textContent = originalMusicName;\n            document.body.appendChild(tempSpan);\n            \n            const originalTitleWidth = tempSpan.offsetWidth;\n            document.body.removeChild(tempSpan);\n            \n            // 如果原始标题长度超过容器宽度，则启用滚动\n            if (originalTitleWidth > titleContainer.offsetWidth) {\n                musicTitle.classList.add('scroll');\n            } else {\n                musicTitle.classList.remove('scroll');\n                // 不滚动时只显示原始标题\n                musicTitle.textContent = originalMusicName;\n            }\n        }\n\n        // 初始化时检查一次\n        window.addEventListener('load', checkTitleLength);\n        // 窗口大小变化时重新检查\n        window.addEventListener('resize', checkTitleLength);\n\n        // 播放/暂停控制\n        playBtn.addEventListener('click', () => {\n            if (audio.paused) {\n                audio.play().catch(err => {\n                    alert('播放失败，请检查链接有效性或网络状态');\n                    console.error('播放错误:', err);\n                });\n            } else {\n                audio.pause();\n            }\n            updatePlayBtnIcon();\n        });\n\n        // 更新播放按钮图标\n        function updatePlayBtnIcon() {\n            const svg = playBtn.querySelector('svg');\n            if (audio.paused) {\n                svg.innerHTML = '<path d=\"M8 5V19L19 12L8 5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M6 4H10V20H6V4Z\"></path><path d=\"M14 4H18V20H14V4Z\"></path>';\n            }\n        }\n\n        // 进度条控制\n        progressContainer.addEventListener('click', (e) => {\n            if (isNaN(audio.duration)) return;\n            const clickPos = e.offsetX / progressContainer.clientWidth;\n            audio.currentTime = clickPos * audio.duration;\n        });\n\n        // 实时更新进度条\n        audio.addEventListener('timeupdate', () => {\n            if (isNaN(audio.duration)) return;\n            const progress = (audio.currentTime / audio.duration) * 100;\n            progressBar.style.width = `${progress}%`;\n        });\n\n        // 音量控制交互\n        volumeBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            volumeSliderVisible = !volumeSliderVisible;\n            volumeSliderContainer.classList.toggle('show', volumeSliderVisible);\n        });\n\n        // 点击页面其他地方隐藏音量滑块\n        document.addEventListener('click', () => {\n            if (volumeSliderVisible) {\n                volumeSliderVisible = false;\n                volumeSliderContainer.classList.remove('show');\n            }\n        });\n\n        // 音量滑块调整\n        volumeSlider.addEventListener('input', () => {\n            audio.volume = volumeSlider.value;\n            if (isMuted) {\n                isMuted = false;\n                updateVolumeIcon();\n            }\n        });\n\n        // 静音切换（双击音量图标）\n        volumeBtn.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            isMuted = !isMuted;\n            audio.muted = isMuted;\n            updateVolumeIcon();\n        });\n\n        // 更新音量图标\n        function updateVolumeIcon() {\n            const svg = volumeBtn.querySelector('svg');\n            if (isMuted || audio.volume === 0) {\n                svg.innerHTML = '<path d=\"M16.5 12C16.5 10.2386 15.5614 8.63604 14 7.93701L16.5 3H7L10.5 7.93701C9.00585 8.69107 8.0043 10.3016 8.0043 12C8.0043 13.6984 9.00585 15.3089 10.5 16.063L7 21H16.5L13 16.063C14.5614 15.364 15.5 13.7614 15.5 12H16.5ZM19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            } else if (audio.volume < 0.5) {\n                svg.innerHTML = '<path d=\"M18.5 10.5L17.5 11.5L14 8V16L17.5 12.5L18.5 13.5L22 10L18.5 6.5L17.5 7.5L18.5 8.5V10.5ZM11 5L6 9H2V15H6L11 19V5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path><path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path><path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            }\n        }\n\n        // 上一曲/下一曲按钮功能\n        prevBtn.addEventListener('click', () => {\n            audio.currentTime = 0;\n            audio.play();\n            updatePlayBtnIcon();\n        });\n\n        nextBtn.addEventListener('click', () => {\n            audio.currentTime = 0;\n            audio.play();\n            updatePlayBtnIcon();\n        });\n\n        // 播放结束后自动循环\n        audio.addEventListener('ended', () => {\n            audio.currentTime = 0;\n            audio.play();\n        });\n\n        // 初始化音量\n        audio.volume = volumeSlider.value;\n    </script>\n</body>\n</html>\n","showThemeToggle":true,"logo":"","darkLogo":"","lightDocTitle":"","lightCardStyle":"poster","lightOverType":"overflow","lightFooterHTML":"","simThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/xjh22222228/public@gh-pages/nav/banner1.jpg","url":""},{"src":"https://gcore.jsdelivr.net/gh/xjh22222228/public@gh-pages/nav/banner2.jpg","url":""}],"simThemeDesc":"这里收录多达 <b>${total}</b> 个优质网站， 助您工作、学习和生活","simCardStyle":"poster","simOverType":"overflow","simThemeHeight":0,"simThemeAutoplay":true,"simDocTitle":"","simTitle":"","simFooterHTML":"","superCardStyle":"column","superOverType":"overflow","superFooterHTML":"","superDocTitle":"","superTitle":"","superImages":[],"lightImages":[],"sideTitle":"拾梦杂货铺","sideDocTitle":"拾梦杂货铺","sideCardStyle":"standard","sideFooterHTML":"","sideThemeHeight":0,"sideThemeAutoplay":false,"sideCollapsed":false,"sideThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755923925990.png","url":"https://shimeng.flowus.cn"}],"shortcutTitle":"","shortcutDocTitle":"拾梦杂货铺","shortcutDockCount":6,"shortcutThemeShowWeather":true,"shortcutThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1756110138580.jpg","url":""}],"checkUrl":false,"spiderIcon":"NO","spiderDescription":"NO","spiderTitle":"NO","spiderImg":"NO","spiderQty":200,"spiderTimeout":6,"loadingCode":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>居中放大的废话文学加载组件</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n    \n    <style>\n        /* 容器设置为全屏居中，但不影响其他元素 */\n        .nonsense-loader-outer-container {\n            position: fixed; /* 固定在视口内 */\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 9999; /* 确保在最上层显示 */\n            pointer-events: none; /* 允许点击穿透，不影响页面交互 */\n        }\n        \n        /* 内部容器保持隔离 */\n        .nonsense-loader-container {\n            display: inline-block;\n            position: relative;\n            pointer-events: auto; /* 恢复容器内的交互能力 */\n        }\n        \n        .nonsense-loader-box {\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n            padding: 30px 40px;\n            text-align: center;\n            min-width: 400px; /* 适当加宽 */\n        }\n        \n        .nonsense-loader-title {\n            font-family: 'Comic Sans MS', cursive, sans-serif;\n            font-size: 24px; /* 放大标题 */\n            font-weight: bold;\n            color: #06D6A0;\n            margin-bottom: 25px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .nonsense-loader-title i {\n            margin-right: 10px;\n            font-size: 28px; /* 放大图标 */\n        }\n        \n        .nonsense-loader-content {\n            padding: 15px 0;\n        }\n        \n        .nonsense-loader-dots {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin-bottom: 25px;\n        }\n        \n        .nonsense-loader-dot {\n            width: 12px; /* 放大圆点 */\n            height: 12px;\n            background-color: #06D6A0;\n            border-radius: 50%;\n        }\n        \n        .nonsense-loader-text {\n            font-family: 'Comic Sans MS', cursive, sans-serif;\n            color: #4B5563;\n            font-size: 20px; /* 放大文本 */\n            transition: opacity 0.3s ease-in-out;\n            line-height: 1.6;\n        }\n        \n        .nonsense-loader-footer {\n            font-size: 14px;\n            color: #9CA3AF;\n            margin-top: 15px;\n        }\n        \n        /* 动画保持不变但适配放大后的元素 */\n        @keyframes nonsenseBounce1 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes nonsenseBounce2 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes nonsenseBounce3 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        .nonsense-loader-dot:nth-child(1) {\n            animation: nonsenseBounce1 1s infinite;\n        }\n        \n        .nonsense-loader-dot:nth-child(2) {\n            animation: nonsenseBounce2 1s infinite;\n            animation-delay: 0.15s;\n        }\n        \n        .nonsense-loader-dot:nth-child(3) {\n            animation: nonsenseBounce3 1s infinite;\n            animation-delay: 0.3s;\n        }\n    </style>\n</head>\n<body>\n    <!-- 外层容器用于居中 -->\n    <div class=\"nonsense-loader-outer-container\">\n        <div class=\"nonsense-loader-container\">\n            <div class=\"nonsense-loader-box\">\n                <div class=\"nonsense-loader-title\">\n                    <i class=\"fa fa-comment\"></i> 别着急，就出来了！\n                </div>\n                \n                <div class=\"nonsense-loader-content\">\n                    <div class=\"nonsense-loader-dots\">\n                        <div class=\"nonsense-loader-dot\"></div>\n                        <div class=\"nonsense-loader-dot\"></div>\n                        <div class=\"nonsense-loader-dot\"></div>\n                    </div>\n                    \n                    <p class=\"nonsense-loader-text\" id=\"nonsense-loader-text-element\">正在加载... 加载是一个过程...</p>\n                </div>\n                \n                <div class=\"nonsense-loader-footer\">\n                    换谷歌（Chrome）浏览器会更流畅！\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <script>\n        (function() {\n            const nonsenseTexts = [\n                \"正在加载... 加载的过程就是等待的过程\",\n                \"数据正在路上... 路有点远\",\n                \"请稍候... 这个稍候可能有点候\",\n                \"加载中... 比上一次快了0.01秒\",\n                \"正在努力处理... 努力就会有结果\",\n                \"不要急... 急也没用\",\n                \"系统正在思考... 它可能需要一杯咖啡\",\n                \"加载进行中... 就像时间在流逝\",\n                \"数据正在整理发型... 马上就好\",\n                \"请等待... 等待是成功的开始\",\n                \"加载中... 你看，它确实在加载\",\n                \"系统没偷懒... 只是在慢慢工作\",\n                \"数据正在排队... 前面还有几个\",\n                \"加载ing... 这个ing可能有点长\",\n                \"别急，好东西值得等待... 虽然我不知道是什么好东西\"\n            ];\n            \n            let textIndex = 0;\n            const textElement = document.getElementById('nonsense-loader-text-element');\n            \n            if (textElement) {\n                setInterval(() => {\n                    textIndex = (textIndex + 1) % nonsenseTexts.length;\n                    textElement.style.opacity = 0;\n                    setTimeout(() => {\n                        textElement.textContent = nonsenseTexts[textIndex];\n                        textElement.style.opacity = 1;\n                    }, 300);\n                }, 3000);\n            }\n        })();\n    </script>\n</body>\n</html>\n","appCardStyle":"retro","appDocTitle":"","gitHubCDN":"gcore.jsdelivr.net","components":[],"pwaEnable":false,"pwaName":"拾梦杂货铺","pwaIcon":"","errorUrlCount":0}