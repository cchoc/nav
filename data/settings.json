{"favicon":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755829655821.png","language":"zh-CN","loading":"random","runtime":1754980465303,"userActions":[],"email":"","showGithub":false,"showLanguage":true,"showRate":true,"openSearch":true,"title":"拾梦杂货铺","description":"","keywords":"资源共享","theme":"Side","actionUrl":"","appTheme":"Current","openSEO":true,"createWebKey":"E","headerContent":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>网站音乐播放器</title>\n    <style>\n        /* 全局样式重置（避免浏览器默认样式差异） */\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        /* 音乐播放器容器 - 固定在右侧上三分之一处 */\n        .music-player {\n            position: fixed;\n            right: 1rem;\n            top: calc(100vh / 3 - 40px);\n            width: 280px;\n            height: 80px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            padding: 0 16px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            z-index: 9999;\n            transition: box-shadow 0.3s ease;\n        }\n\n        .music-player:hover {\n            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n        }\n\n        /* 播放控制按钮样式 */\n        .player-controls {\n            display: flex;\n            gap: 12px;\n            align-items: center;\n        }\n\n        .control-btn {\n            width: 40px;\n            height: 40px;\n            border: none;\n            border-radius: 50%;\n            background-color: #f5f5f5;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: background-color 0.3s ease;\n            /* 修复按钮点击区域问题 */\n            overflow: visible;\n            outline: none;\n        }\n\n        .control-btn:hover {\n            background-color: #e8e8e8;\n        }\n\n        .play-btn {\n            background-color: #2c3e50;\n            color: white;\n        }\n\n        .play-btn:hover {\n            background-color: #34495e;\n        }\n\n        /* 音乐信息与进度条容器 */\n        .music-info {\n            flex: 1;\n            margin: 0 12px;\n        }\n\n        .music-title {\n            font-size: 14px;\n            color: #333333;\n            margin-bottom: 4px;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        /* 进度条样式 */\n        .progress-container {\n            width: 100%;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            cursor: pointer;\n        }\n\n        .progress-bar {\n            width: 0%;\n            height: 100%;\n            background-color: #2c3e50;\n            border-radius: 2px;\n            transition: width 0.1s linear;\n        }\n\n        /* 音量控制样式 */\n        .volume-control {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .volume-btn {\n            border: none;\n            background: transparent;\n            cursor: pointer;\n            color: #666666;\n            outline: none;\n        }\n\n        .volume-slider {\n            width: 60px;\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            outline: none;\n            -webkit-appearance: none;\n        }\n\n        .volume-slider::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n        }\n\n        .volume-slider::-moz-range-thumb {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background-color: #2c3e50;\n            cursor: pointer;\n            border: none;\n        }\n\n        /* 修复：本地音乐选择按钮 - 确保点击区域完整 */\n        #selectMusicBtn {\n            z-index: 10;\n            position: relative;\n        }\n\n        /* 响应式调整 */\n        @media (max-width: 768px) {\n            .music-player {\n                width: 240px;\n                height: 70px;\n                padding: 0 12px;\n            }\n\n            .control-btn {\n                width: 36px;\n                height: 36px;\n            }\n\n            .volume-slider {\n                width: 50px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- 音乐播放器核心容器 -->\n    <div class=\"music-player\">\n        <!-- 播放/暂停、上一曲/下一曲控制 -->\n        <div class=\"player-controls\">\n            <button class=\"control-btn prev-btn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M19 20L9 12L19 4V20Z\"></path>\n                    <path d=\"M5 19V5\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn play-btn\" id=\"playBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M8 5V19L19 12L8 5Z\"></path>\n                </svg>\n            </button>\n            <button class=\"control-btn next-btn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M5 4L15 12L5 20V4Z\"></path>\n                    <path d=\"M19 5V19\"></path>\n                </svg>\n            </button>\n        </div>\n\n        <!-- 音乐标题与进度条 -->\n        <div class=\"music-info\">\n            <div class=\"music-title\" id=\"musicTitle\">未选择音乐</div>\n            <div class=\"progress-container\" id=\"progressContainer\">\n                <div class=\"progress-bar\" id=\"progressBar\"></div>\n            </div>\n        </div>\n\n        <!-- 音量控制 -->\n        <div class=\"volume-control\">\n            <button class=\"volume-btn\" id=\"volumeBtn\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path>\n                    <path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path>\n                    <path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>\n                </svg>\n            </button>\n            <input type=\"range\" class=\"volume-slider\" id=\"volumeSlider\" min=\"0\" max=\"1\" step=\"0.01\" value=\"0.7\">\n        </div>\n\n        <!-- 本地音乐选择区域（优化触发逻辑） -->\n        <div style=\"position: relative;\">\n            <!-- 显式按钮：确保点击区域可见且可交互 -->\n            <button class=\"control-btn\" id=\"selectMusicBtn\" title=\"选择本地音乐\" style=\"z-index: 2;\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M12 5V19\"></path>\n                    <path d=\"M5 12H19\"></path>\n                </svg>\n            </button>\n            <!-- 文件选择框：覆盖在按钮上，确保点击时触发 -->\n            <input type=\"file\" id=\"musicFile\" accept=\"audio/*\" multiple\n                style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; cursor: pointer; z-index: 1;\">\n        </div>\n    </div>\n\n    <!-- 音乐播放核心逻辑（修复选择音乐触发问题） -->\n    <script>\n        // 获取DOM元素\n        const playBtn = document.getElementById('playBtn');\n        const prevBtn = document.querySelector('.prev-btn');\n        const nextBtn = document.querySelector('.next-btn');\n        const progressContainer = document.getElementById('progressContainer');\n        const progressBar = document.getElementById('progressBar');\n        const volumeBtn = document.getElementById('volumeBtn');\n        const volumeSlider = document.getElementById('volumeSlider');\n        const selectMusicBtn = document.getElementById('selectMusicBtn');\n        const musicFile = document.getElementById('musicFile');\n        const musicTitle = document.getElementById('musicTitle');\n\n        // 初始化音频对象\n        let audio = new Audio();\n        let musicList = [];\n        let currentIndex = 0;\n        let isMuted = false;\n\n        // 【核心修复1】双重触发：按钮点击+文件框直接交互\n        // 1. 按钮点击触发文件选择\n        selectMusicBtn.addEventListener('click', (e) => {\n            e.stopPropagation(); // 防止事件冒泡导致失效\n            console.log('选择音乐按钮被点击'); // 调试用：确认点击事件触发\n            musicFile.click();\n        });\n\n        // 2. 文件选择框直接变化时处理（兼容不同浏览器触发方式）\n        musicFile.addEventListener('change', (e) => {\n            e.stopPropagation();\n            const files = e.target.files;\n            \n            // 【核心修复2】增加文件选择判断与提示\n            if (!files || files.length === 0) {\n                console.log('未选择任何文件');\n                alert('未选择任何音频文件，请重新选择');\n                return;\n            }\n\n            // 过滤非音频文件（增强兼容性）\n            const validAudios = Array.from(files).filter(file => {\n                const isAudio = file.type.startsWith('audio/') || \n                                ['mp3', 'wav', 'flac', 'ogg', 'm4a'].includes(file.name.split('.').pop().toLowerCase());\n                if (!isAudio) {\n                    alert(`\"${file.name}\" 不是支持的音频文件，已过滤`);\n                }\n                return isAudio;\n            });\n\n            if (validAudios.length === 0) {\n                alert('所选文件中无有效音频文件，请选择MP3、WAV、FLAC等格式');\n                return;\n            }\n\n            // 添加到音乐列表\n            musicList = [...musicList, ...validAudios];\n            console.log(`已添加 ${validAudios.length} 首音乐，总列表：${musicList.length} 首`);\n\n            // 首次选择时自动加载\n            if (musicList.length === validAudios.length) {\n                currentIndex = 0;\n                loadMusic(musicList[currentIndex]);\n            }\n\n            // 【核心修复3】重置文件框（允许重复选择同一文件）\n            musicFile.value = '';\n        });\n\n        // 加载音乐函数（增加错误处理）\n        function loadMusic(musicFile) {\n            try {\n                // 释放之前的临时URL（避免内存泄漏）\n                if (audio.src) {\n                    URL.revokeObjectURL(audio.src);\n                }\n\n                const musicUrl = URL.createObjectURL(musicFile);\n                audio.src = musicUrl;\n                const fileName = musicFile.name.replace(/\\.[^/.]+$/, \"\");\n                musicTitle.textContent = fileName;\n\n                // 【核心修复4】加载错误监听\n                audio.onerror = function() {\n                    alert(`加载音乐 \"${fileName}\" 失败，请检查文件是否损坏或格式不支持`);\n                    console.error('音频加载错误：', audio.error);\n                };\n\n                audio.load();\n                // 尝试自动播放（处理浏览器自动播放策略）\n                audio.play().then(() => {\n                    updatePlayBtnIcon();\n                }).catch(err => {\n                    // 自动播放被浏览器阻止时提示手动播放\n                    alert(`音乐 \"${fileName}\" 已加载，请点击播放按钮开始播放`);\n                    updatePlayBtnIcon();\n                    console.warn('自动播放被阻止：', err);\n                });\n            } catch (err) {\n                alert('加载音乐时发生错误，请重试');\n                console.error('加载音乐异常：', err);\n            }\n        }\n\n        // 播放/暂停控制（保留原有逻辑）\n        playBtn.addEventListener('click', () => {\n            if (musicList.length === 0) {\n                alert('请先选择本地音乐文件');\n                return;\n            }\n\n            if (audio.paused) {\n                audio.play().catch(err => {\n                    alert('播放失败，请检查浏览器音频权限');\n                    console.error('播放错误：', err);\n                });\n            } else {\n                audio.pause();\n            }\n            updatePlayBtnIcon();\n        });\n\n        // 更新播放按钮图标\n        function updatePlayBtnIcon() {\n            const svg = playBtn.querySelector('svg');\n            if (audio.paused) {\n                svg.innerHTML = '<path d=\"M8 5V19L19 12L8 5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M6 4H10V20H6V4Z\"></path><path d=\"M14 4H18V20H14V4Z\"></path>';\n            }\n        }\n\n        // 进度条控制（保留原有逻辑）\n        progressContainer.addEventListener('click', (e) => {\n            if (isNaN(audio.duration)) return; // 音频未加载完成时不执行\n            const progressWidth = progressContainer.clientWidth;\n            const clickX = e.offsetX;\n            const jumpRatio = clickX / progressWidth;\n            audio.currentTime = jumpRatio * audio.duration;\n        });\n\n        audio.addEventListener('timeupdate', () => {\n            if (isNaN(audio.duration)) return;\n            const progressRatio = audio.currentTime / audio.duration;\n            progressBar.style.width = `${progressRatio * 100}%`;\n        });\n\n        // 音量控制（保留原有逻辑）\n        volumeSlider.addEventListener('input', () => {\n            audio.volume = volumeSlider.value;\n            if (isMuted) {\n                isMuted = false;\n                updateVolumeBtnIcon();\n            }\n        });\n\n        volumeBtn.addEventListener('click', () => {\n            isMuted = !isMuted;\n            audio.muted = isMuted;\n            updateVolumeBtnIcon();\n        });\n\n        function updateVolumeBtnIcon() {\n            const svg = volumeBtn.querySelector('svg');\n            if (isMuted || audio.volume === 0) {\n                svg.innerHTML = '<path d=\"M16.5 12C16.5 10.2386 15.5614 8.63604 14 7.93701L16.5 3H7L10.5 7.93701C9.00585 8.69107 8.0043 10.3016 8.0043 12C8.0043 13.6984 9.00585 15.3089 10.5 16.063L7 21H16.5L13 16.063C14.5614 15.364 15.5 13.7614 15.5 12H16.5ZM19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            } else if (audio.volume < 0.5) {\n                svg.innerHTML = '<path d=\"M18.5 10.5L17.5 11.5L14 8V16L17.5 12.5L18.5 13.5L22 10L18.5 6.5L17.5 7.5L18.5 8.5V10.5ZM11 5L6 9H2V15H6L11 19V5Z\"></path>';\n            } else {\n                svg.innerHTML = '<path d=\"M11 5L6 9H2V15H6L11 19V5Z\"></path><path d=\"M15.54 8.46C16.4774 9.39764 17.004 10.6631 17.004 11.96C17.004 13.2569 16.4774 14.5224 15.54 15.46\"></path><path d=\"M19.07 4.93C20.9447 6.80528 22 9.34884 22 12C22 14.6512 20.9447 17.1947 19.07 19.07\"></path>';\n            }\n        }\n\n        // 上一曲/下一曲控制（保留原有逻辑）\n        prevBtn.addEventListener('click', () => {\n            if (musicList.length === 0) return;\n            currentIndex = (currentIndex - 1 + musicList.length) % musicList.length;\n            loadMusic(musicList[currentIndex]);\n        });\n\n        nextBtn.addEventListener('click', () => {\n            if (musicList.length === 0) return;\n            currentIndex = (currentIndex + 1) % musicList.length;\n            loadMusic(musicList[currentIndex]);\n        });\n\n        // 播放结束自动下一曲（保留原有逻辑）\n        audio.addEventListener('ended', () => {\n            currentIndex = (currentIndex + 1) % musicList.length;\n            loadMusic(musicList[currentIndex]);\n        });\n\n        // 释放资源（保留原有逻辑）\n        window.addEventListener('beforeunload', () => {\n            if (audio.src) {\n                URL.revokeObjectURL(audio.src);\n            }\n        });\n\n        // 初始化提示：告知用户如何操作\n        window.addEventListener('load', () => {\n            console.log('音乐播放器已加载完成，点击右侧\"+\"按钮选择本地音乐');\n        });\n    </script>\n</body>\n</html>","footerContent":"<!-- 底部图标链接区域 -->\n<footer class=\"footer-icons\">\n    <div class=\"icon-container\">\n <!-- 抖音图标及链接 -->\n        <a href=\"https://v.douyin.com/sEi0WxG85Bk/ 0@1.com :8pm/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"抖音\">\n            <img src=\"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755670618682.png\" alt=\"抖音图标\">\n        </a>\n\n        <!-- 快手图标及链接 -->\n        <a href=\"https://weixin.qq.com/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"快手\">\n            <img src=\"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755670778633.png\" alt=\"快手图标\">\n        </a>\n        \n        <!-- 小红书图标及链接 -->\n        <a href=\"https://weibo.com/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"小红书\">\n            <img src=\"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755670833567.png\" alt=\"小红书图标\">\n        </a>\n\n        <!-- 公众号图标及链接 -->\n        <a href=\"mailto:example@mail.com\" title=\"公众号邮件\">\n            <img src=\"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755670851794.png\" alt=\"公众号图标\">\n        </a>\n    </div>\n    \n<div class=\"dark-white\">\n   <div>本站所有资源收集整理于网络，本站不参与制作，用于互联网爱好者学习和研究，如不慎侵犯了您的权利，请及时联系站长处理删除。敬请谅解！</div>\n  <div>Copyright © 2018-${year} ${hostname}, All Rights Reserved</div>  \n</div>\n\n<style>\n/* 底部区域样式 */\n.footer-icons {\n    background-color: #f5f5f5;\n    padding: 20px 0;\n    margin-top: 50px;\n    text-align: center;\n}\n\n/* 图标容器样式 */\n.icon-container {\n    display: flex;\n    justify-content: center;\n    gap: 25px;\n    margin-bottom: 15px;\n    flex-wrap: wrap; /* 适配小屏幕 */\n}\n\n/* 图标链接样式 */\n.icon-container a {\n    text-decoration: none;\n    transition: transform 0.3s ease;\n}\n\n/* 图标悬停效果 */\n.icon-container a:hover {\n    transform: translateY(-5px);\n}\n\n/* 图标图片样式 */\n.icon-container img {\n    width: 40px;\n    height: 40px;\n    border-radius: 8px; /* 轻微圆角 */\n}\n\n}\n</style>","showThemeToggle":true,"logo":"","darkLogo":"","lightDocTitle":"","lightCardStyle":"poster","lightOverType":"overflow","lightFooterHTML":"","simThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/xjh22222228/public@gh-pages/nav/banner1.jpg","url":""},{"src":"https://gcore.jsdelivr.net/gh/xjh22222228/public@gh-pages/nav/banner2.jpg","url":""}],"simThemeDesc":"这里收录多达 <b>${total}</b> 个优质网站， 助您工作、学习和生活","simCardStyle":"poster","simOverType":"overflow","simThemeHeight":0,"simThemeAutoplay":true,"simDocTitle":"","simTitle":"","simFooterHTML":"","superCardStyle":"column","superOverType":"overflow","superFooterHTML":"","superDocTitle":"","superTitle":"","superImages":[],"lightImages":[],"sideTitle":"拾梦杂货铺","sideDocTitle":"拾梦杂货铺","sideCardStyle":"standard","sideFooterHTML":"","sideThemeHeight":0,"sideThemeAutoplay":false,"sideCollapsed":false,"sideThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1755923925990.png","url":"https://shimeng.flowus.cn"}],"shortcutTitle":"","shortcutDocTitle":"拾梦杂货铺","shortcutDockCount":6,"shortcutThemeShowWeather":true,"shortcutThemeImages":[{"src":"https://gcore.jsdelivr.net/gh/cchoc/nav_img@main/1756110138580.jpg","url":""}],"checkUrl":false,"spiderIcon":"NO","spiderDescription":"NO","spiderTitle":"NO","spiderImg":"NO","spiderQty":200,"spiderTimeout":6,"loadingCode":"<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>居中放大的废话文学加载组件</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n    \n    <style>\n        /* 容器设置为全屏居中，但不影响其他元素 */\n        .nonsense-loader-outer-container {\n            position: fixed; /* 固定在视口内 */\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 9999; /* 确保在最上层显示 */\n            pointer-events: none; /* 允许点击穿透，不影响页面交互 */\n        }\n        \n        /* 内部容器保持隔离 */\n        .nonsense-loader-container {\n            display: inline-block;\n            position: relative;\n            pointer-events: auto; /* 恢复容器内的交互能力 */\n        }\n        \n        .nonsense-loader-box {\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 4px 16px rgba(0,0,0,0.15);\n            padding: 30px 40px;\n            text-align: center;\n            min-width: 400px; /* 适当加宽 */\n        }\n        \n        .nonsense-loader-title {\n            font-family: 'Comic Sans MS', cursive, sans-serif;\n            font-size: 24px; /* 放大标题 */\n            font-weight: bold;\n            color: #06D6A0;\n            margin-bottom: 25px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        \n        .nonsense-loader-title i {\n            margin-right: 10px;\n            font-size: 28px; /* 放大图标 */\n        }\n        \n        .nonsense-loader-content {\n            padding: 15px 0;\n        }\n        \n        .nonsense-loader-dots {\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin-bottom: 25px;\n        }\n        \n        .nonsense-loader-dot {\n            width: 12px; /* 放大圆点 */\n            height: 12px;\n            background-color: #06D6A0;\n            border-radius: 50%;\n        }\n        \n        .nonsense-loader-text {\n            font-family: 'Comic Sans MS', cursive, sans-serif;\n            color: #4B5563;\n            font-size: 20px; /* 放大文本 */\n            transition: opacity 0.3s ease-in-out;\n            line-height: 1.6;\n        }\n        \n        .nonsense-loader-footer {\n            font-size: 14px;\n            color: #9CA3AF;\n            margin-top: 15px;\n        }\n        \n        /* 动画保持不变但适配放大后的元素 */\n        @keyframes nonsenseBounce1 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes nonsenseBounce2 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes nonsenseBounce3 {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-10px); }\n        }\n        \n        .nonsense-loader-dot:nth-child(1) {\n            animation: nonsenseBounce1 1s infinite;\n        }\n        \n        .nonsense-loader-dot:nth-child(2) {\n            animation: nonsenseBounce2 1s infinite;\n            animation-delay: 0.15s;\n        }\n        \n        .nonsense-loader-dot:nth-child(3) {\n            animation: nonsenseBounce3 1s infinite;\n            animation-delay: 0.3s;\n        }\n    </style>\n</head>\n<body>\n    <!-- 外层容器用于居中 -->\n    <div class=\"nonsense-loader-outer-container\">\n        <div class=\"nonsense-loader-container\">\n            <div class=\"nonsense-loader-box\">\n                <div class=\"nonsense-loader-title\">\n                    <i class=\"fa fa-comment\"></i> 别着急，就出来了！\n                </div>\n                \n                <div class=\"nonsense-loader-content\">\n                    <div class=\"nonsense-loader-dots\">\n                        <div class=\"nonsense-loader-dot\"></div>\n                        <div class=\"nonsense-loader-dot\"></div>\n                        <div class=\"nonsense-loader-dot\"></div>\n                    </div>\n                    \n                    <p class=\"nonsense-loader-text\" id=\"nonsense-loader-text-element\">正在加载... 加载是一个过程...</p>\n                </div>\n                \n                <div class=\"nonsense-loader-footer\">\n                    换谷歌（Chrome）浏览器会更流畅！\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <script>\n        (function() {\n            const nonsenseTexts = [\n                \"正在加载... 加载的过程就是等待的过程\",\n                \"数据正在路上... 路有点远\",\n                \"请稍候... 这个稍候可能有点候\",\n                \"加载中... 比上一次快了0.01秒\",\n                \"正在努力处理... 努力就会有结果\",\n                \"不要急... 急也没用\",\n                \"系统正在思考... 它可能需要一杯咖啡\",\n                \"加载进行中... 就像时间在流逝\",\n                \"数据正在整理发型... 马上就好\",\n                \"请等待... 等待是成功的开始\",\n                \"加载中... 你看，它确实在加载\",\n                \"系统没偷懒... 只是在慢慢工作\",\n                \"数据正在排队... 前面还有几个\",\n                \"加载ing... 这个ing可能有点长\",\n                \"别急，好东西值得等待... 虽然我不知道是什么好东西\"\n            ];\n            \n            let textIndex = 0;\n            const textElement = document.getElementById('nonsense-loader-text-element');\n            \n            if (textElement) {\n                setInterval(() => {\n                    textIndex = (textIndex + 1) % nonsenseTexts.length;\n                    textElement.style.opacity = 0;\n                    setTimeout(() => {\n                        textElement.textContent = nonsenseTexts[textIndex];\n                        textElement.style.opacity = 1;\n                    }, 300);\n                }, 3000);\n            }\n        })();\n    </script>\n</body>\n</html>\n","appCardStyle":"retro","appDocTitle":"","gitHubCDN":"gcore.jsdelivr.net","components":[],"pwaEnable":false,"pwaName":"拾梦杂货铺","pwaIcon":"","errorUrlCount":0}